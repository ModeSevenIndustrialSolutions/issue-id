---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation

name: "🏷️ Add JIRA ticket to commit message"

inputs:
  # Required
  ISSUE_ID_LOOKUP_JSON:
    description: "JSON mapping users to JIRA tickets"
    type: string
    required: true
  # Optional
  INJECT:
    # When injection is enabled and no issue found...
    # String will be added, output variable set true
    description: "Whether to inject an issue-id if NOT found"
    type: boolean
    required: false
    default: true

outputs:
  PRESENT:
    description: "Whether the required ticket string is present"
    value: ${{ steps.fetch.outputs.count }}

runs:
  using: "composite"
  steps:
    # No need to checkout repository, performed by first action below
    - name: "Get GIT commit message body"
      id: commit-message
      uses: ModeSevenIndustrialSolutions/issue-id/.github/actions/git-commit-message@main

    - name: "Check commit message for ticket/string"
      id: check
      shell: bash
      run: |
        # Check commit message for ticket/string
        COMMIT_MESSAGE="${{ env.COMMIT_MESSAGE }}"
        if [ -z "$COMMIT_MESSAGE" ]; then
          echo "Commit message body was empty/unpopulated ❌"; exit 1
        fi
        if [[ "$COMMIT_MESSAGE" =~ "Issue-ID: " ]]; then
          echo "Ticket string found in the pull request ✅"
          echo "PRESENT=true" >> "$GITHUB_ENV"
          echo "PRESENT=true" >> "$GITHUB_OUTPUT"
        else
          echo "Ticket string NOT found in the pull request 💬"
          echo "PRESENT=false" >> "$GITHUB_ENV"
          echo "PRESENT=false" >> "$GITHUB_OUTPUT"
        fi

    - name: "Set key to use for JSON lookup"
      if: env.PRESENT == 'false' && inputs.INJECT == 'true'
      shell: bash
      run: |
        # Set key to use for JSON lookup
        ACTOR="${{ github.actor }}"
        ACTOR_ID="${{ github.actor_id }}"
        echo "Using GitHub actor as lookup key: $ACTOR [$ACTOR_ID] 🔑"
        echo "key=$ACTOR" >> "$GITHUB_ENV"

    - name: "Get ticket from JSON lookup table"
      if: env.PRESENT == 'false' && inputs.INJECT == 'true'
      uses: ModeSevenIndustrialSolutions/issue-id/.github/actions/json-var-key-value-lookup@main
      with:
        json: ${{ inputs.issue_id_lookup_json }}
        key: ${{ env.key }}

    - name: "Configure GIT user for commit"
      if: env.PRESENT == 'false' && inputs.INJECT == 'true'
      uses: ModeSevenIndustrialSolutions/issue-id/.github/actions/git-configure@main

    - name: "Add JIRA ticket to commit message"
      id: inject
      if: env.PRESENT == 'false' && inputs.INJECT == 'true'
      shell: bash
      run: |
        # Add JIRA ticket to commit message
        git commit --amend -m "${{ env.COMMIT_MESSAGE }}" -m "Issue-ID: ${{ env.value }}" --no-verify --no-edit
        echo "Force push update on this pull request ⚠️"
        git push --force
        echo "present=true" >> "$GITHUB_OUTPUT"
